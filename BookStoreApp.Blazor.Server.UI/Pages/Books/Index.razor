@page "/books/"
@inject IBookService bookService
@inject IJSRuntime js;
<h3>Index</h3>


@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}

@if (Books == null)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <AuthorizeView Roles="Admin">
        <a class="btn btn-primary" href="/books/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
    </AuthorizeView>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th></th>
                <th>Title</th>
                <th>Price</th>
                <th>Author Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Books)
            {
                <tr>
                    <td>
                        <img src="@book.Image" width="100" height="100" alt="@book.Title"/>
                    </td>
                    <td>@book.Title</td>
                    <td>@book.Price.ToString()</td>
                    <td><a class="btn btn-link" href="/authors/details/@book.AuthorId">@book.AuthorName</a></td>
                    <td>@book.Title</td>
                    <td>
                        <a class="btn btn-primary" href="/books/details/@book.Id"><span class="oi oi-book"></span>Details</a>
                        <AuthorizeView Roles="Admin">
                            <a class="btn btn-warning" href="/books/update/@book.Id"><span class="oi oi-pencil"></span>Edit</a>
                            <button @onclick=@(() => Delete(book.Id)) class="btn btn-danger" href="/books/delete"><span class="oi oi-delete"></span>Delete</button>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BookReadOnlyDto> Books = new();
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await bookService.Get();
        if (response.Success)
        {
            Books = response.Data;
        }
    }

    private async Task Delete(int bookId)
    {
        var book = Books.First(a => a.Id == bookId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are You Sure You wont to delete {book.Title} by {book.AuthorName}?");

        if (confirm)
        {
            var response = await bookService.Delete(bookId);

            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }



    }
}
